---
- name: Deploy Cart Application
  hosts: localhost  # Runs on the slave node
  connection: local
  become: yes
  vars:
    app_user: "cartuser"
    service_name: "cart-app"

  tasks:
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - git
          - unzip
          - curl
        state: present
        update_cache: yes

    - name: Create application user
      ansible.builtin.user:
        name: "{{ app_user }}"
        system: yes
        create_home: no
        shell: /usr/sbin/nologin

    - name: Create application directory
      ansible.builtin.file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Download artifact from Nexus
      ansible.builtin.get_url:
        url: "{{ nexus_url }}/repository/maven-releases/com/example/{{ artifact_name }}/{{ artifact_version }}/{{ artifact_name }}-{{ artifact_version }}.zip"
        dest: "/tmp/cart-app.zip"
        url_username: "{{ nexus_user }}"
        url_password: "{{ nexus_pass }}"
        validate_certs: no
      register: download_result
      until: download_result is succeeded
      retries: 3
      delay: 5

    - name: Unzip application
      ansible.builtin.unarchive:
        src: "/tmp/cart-app.zip"
        dest: "{{ app_dir }}"
        remote_src: yes
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        creates: "{{ app_dir }}/requirements.txt"  # Assuming this exists in zip

    - name: Clone source code repository
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}/src"
        version: "main"  # or your specific branch
        force: yes

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: "python3 -m venv {{ app_dir }}/venv"
        creates: "{{ app_dir }}/venv/bin/activate"

    - name: Install requirements
      ansible.builtin.pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ app_dir }}/venv"

    - name: Configure systemd service
      ansible.builtin.template:
        src: "templates/cart.service.j2"
        dest: "/etc/systemd/system/{{ service_name }}.service"
      notify: Restart application

    - name: Enable and start service
      ansible.builtin.systemd:
        name: "{{ service_name }}"
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Restart application
      ansible.builtin.systemd:
        name: "{{ service_name }}"
        state: restarted
